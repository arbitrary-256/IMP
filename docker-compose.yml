# 1) populate a .env file made from template.env
# 2) open your desired firewall ports at your docker host:
## ${REACT_APP_APIPORT} exposes the express api to the internet
## ${REACT_APP_FRONTENDPORT} exposes the front end web client to the internet
# 3) run 'yarn imp-up' to deploy frontend and database with docker compose
version: '3.9'
services:
# nginx web server to host the web application
 frontend:
  image: nginx:alpine
  volumes:
   - $PWD/build:/usr/share/nginx/html:ro
  ports:
   - $REACT_APP_FRONTENDPORT:80
  networks:
   - frontend

# MariaDB database to host the backend data
# api server to connect frontend to database
 api:
  build: src-api
  image: imp_api:alpine
  environment:
   - NODE_ENV=production
   - DB_HOST=$REACT_APP_MARIADBHOST
   - DB_PORT=$REACT_APP_MARIADBPORT
   - DB_USER=$REACT_APP_MARIADBUSER
   - DB_PASSWORD=$REACT_APP_MARIADBPASSWORD
   - DB_NAME=$REACT_APP_MARIADBDATABASENAME
  depends_on:
   - database
   - frontend
  networks:
   - maria
   - frontend
  expose:
   - $REACT_APP_APIPORT
#   ports:
#    - $REACT_APP_APIPORT:$REACT_APP_APIPORT
#   stdin_open: true
#   tty: true

 database:
  image: mariadb:latest
  volumes:
   - $PWD/mariadbdata:/var/lib/mysql
  environment:
   - MARIADB_ROOT_USER=$REACT_APP_MARIADBROOTUSER
   - MARIADB_ROOT_PASSWORD=$REACT_APP_MARIADBROOTPASSWORD
   - MARIADB_USER=$REACT_APP_MARIADBUSER
   - MARIADB_PASSWORD=$REACT_APP_MARIADBPASSWORD
   - MARIADB_DATABASE=$REACT_APP_MARIADBDATABASENAME
   - REACT_APP_APIPORT=$REACT_APP_APIPORT
  networks:
   - maria
  expose:
   - $REACT_APP_MARIADBPORT
#   ports:
#    - $REACT_APP_MARIADBPORT:$REACT_APP_MARIADBPORT

networks:
 frontend:
  external: false
 maria:
  external: false
